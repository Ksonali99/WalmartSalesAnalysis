-- Create database
CREATE DATABASE IF NOT EXISTS walmartSales;


-- Create table
CREATE TABLE IF NOT EXISTS sales(
	invoice_id VARCHAR(30) NOT NULL PRIMARY KEY,
    branch VARCHAR(5) NOT NULL,
    city VARCHAR(30) NOT NULL,
    customer_type VARCHAR(30) NOT NULL,
    gender VARCHAR(30) NOT NULL,
    product_line VARCHAR(100) NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    quantity INT NOT NULL,
    tax_pct FLOAT(6,4) NOT NULL,
    total DECIMAL(12, 4) NOT NULL,
    date DATETIME NOT NULL,
    time TIME NOT NULL,
    payment VARCHAR(15) NOT NULL,
    cogs DECIMAL(10,2) NOT NULL,
    gross_margin_pct FLOAT(11,9),
    gross_income DECIMAL(12, 4),
    rating FLOAT(2, 1)
);
-- Describe Table

select * from sales;
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
----------------------------------------------------- -- Data cleaning ------------------------------------------------------------

-- Add Time_of_Day column

select time, 
	CASE 
    WHEN time between "00:00:00" AND "12:00:00" THEN "Morning"
    WHEN time between "12:01:00" AND "16:00:00" THEN "Afternoon"
    ELSE "Evening"
    END AS time_of_day
 from Sales;
 
 ALTER table sales ADD column time_of_day VARCHAR(20);
 
 UPDATE sales
 SET time_of_day = (CASE 
    WHEN time between "00:00:00" AND "12:00:00" THEN "Morning"
    WHEN time between "12:01:00" AND "16:00:00" THEN "Afternoon"
ELSE "Evening" END);

-- Add day_name column

SELECT
  date, 
  dayname(date) AS day_name 
FROM sales;

-- ALTER TABLE sales ADD column day_name VARCHAR(20);

UPDATE sales
SET day_name = dayname(date);

-- Add month_name Column

SELECT 
  date, 
  monthname(date) AS month_name 
FROM sales;

-- ALTER TABLE sales ADD column month_name VARCHAR(10);

UPDATE sales
SET month_name = monthname(date);

-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------ (generic) ---------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
Q. how many branch are there?
SELECT 
  distinct branch 
FROM sales;

Q.  What are the distinct city?
sELECT
  city 
FROM sales
group by 1;

Q What are the customer type? 

SELECT 
  customer_type 
FROM sales
group by 1;
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------ (Product) ---------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------

Q How many Products unique line data have? 
SELECT
  product_line 
FROM sales
group by 1;

Q What is the most selling product line?

SELECT
  product_line, 
  sum(quantity) as QTY
FROM sales
GROUP BY 1
ORDER BY QTY DESC;

Q What is the total revenue by month?

SELECT month_name, sum(total) AS Total_Revenue
FROM sales
GROUP BY 1
ORDER BY Total_Revenue DESC;

Q What month had the largest COGS?

SELECT month_name, sum(cogs)  AS cogs
FROM sales
GROUP BY 1
ORDER BY cogs DESC;

Q Which branch had the largest revenue ?
SELECT branch, 
        sum(total) AS Total_revenue
FROM sales
GROUP BY 1
ORDER BY Total_revenue DESC;

Q What product line had the largest revenue?
SELECT
	product_line,
	SUM(total) as total_revenue
FROM sales
GROUP BY product_line
ORDER BY total_revenue DESC;

Q What is the city with the largest revenue?
SELECT
	branch,
	city,
	SUM(total) AS total_revenue
FROM sales
GROUP BY city, branch 
ORDER BY total_revenue;


Q What product line had the largest VAT?
SELECT
	product_line,
	AVG(tax_pct) as avg_tax
FROM sales
GROUP BY product_line
ORDER BY avg_tax DESC;

Q Fetch each product line and add a column to those product  line showing "Good", "Bad". Good if its greater than average sales

SELECT
sales.product_line, sales.quantity,
    CASE
        WHEN sales.quantity > avg_sales.avg_qnty THEN 'Good'
        ELSE 'Bad'
    END AS remark
FROM
    sales
JOIN
    (SELECT
        product_line,
        AVG(quantity) AS avg_qnty
    FROM
        sales
    GROUP BY
        product_line) AS avg_sales ON sales.product_line = avg_sales.product_line;
        
Q Which branch sold more products than average product sold?

SELECT 
  branch, 
  sum(quantity) as total_quantity 
FROM sales
GROUP BY
  branch
HAVING
  sum(quantity) > 
      (select avg(quantity) from sales);

Q What is the most common product line by gender?

SELECT 
	count(gender) AS gender_count, 
	product_line  
FROM sales
GROUP BY 2
ORDER BY gender_count DESC;

Q What is the average rating of each product line ?

SELECT 
	product_line, 
    ROUND(AVG(rating), 2) as avg_rating
FROM sales
GROUP BY 1
ORDER BY Avg_rating DESC;
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ----------------------------------------------------------------- Customers --------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------

Q How many unique customer types does the data have?
SELECT
	DISTINCT customer_type
FROM sales;

Q How many unique payment methods does the data have?
SELECT
	DISTINCT payment
FROM sales;

Q What is customer base by gender?
SELECT 
	gender, count(*)
FROM sales
GROUP BY gender;

Q What is the most common customer type?

SELECT  
	customer_type, count(*) AS Most_occurrance_cus_Types 
FROM sales
GROUP BY 1
ORDER BY 2 DESC;

Q Which customer type buys the most?
SELECT 
	customer_type, 
ROUND(SUM(total),2) AS "Total Sale by Customer_type"
FROM sales
GROUP BY 1
ORDER BY SUM(total) DESC;


Q What is the gender distribution every month at each branch ?
SELECT 
    branch, 
    gender, 
    month_name, 
    count(*) AS Distribution 
FROM 
    sales 
GROUP BY 
    branch, gender, month_name 
ORDER BY Distribution DESC;

 Q Which time of the day do customers give most ratings?
 SELECT
	time_of_day,
	AVG(rating) AS avg_rating
FROM 
	sales
GROUP BY 
	time_of_day
ORDER BY 
	avg_rating DESC;
-- It seems that the time of day does not significantly impact the ratings, 
as the average ratings remain relatively consistent across all times of the day.

Q Which day fo the week has the best avg ratings?
SELECT
	day_name,
    AVG(rating) AS Avg_rate_per_day
    FROM sales
GROUP BY day_name 
ORDER BY Avg_rate_per_day DESC;
-- Monday, Tuesday, and Friday are the top days for receiving high ratings.

Q why is that the case, how many sales are made on these days?
SELECT 
    day_name,
    SUM(total) AS total_sales
FROM 
    sales
GROUP BY 
    day_name
ORDER BY total_sales DESC;

The high ratings on Mondays, Tuesdays, and Fridays cannot solely be attributed to sales performance, 
as the top sales days are actually Saturdays, Tuesdays, and Thursdays.

Q Which day has the best average ratings per branch?

SELECT 
    branch,
    date(date) AS Date,
    AVG(rating) AS average_rating
FROM 
    sales
GROUP BY 
    branch,
    date
ORDER BY 
    branch,
    average_rating DESC;

Based on the 2019 sales dataset, it appears that "Branch A" consistently receives high ratings each month, 
while "Branch C" consistently receives low average ratings. Therefore, we should focus on improving the 
ratings for "Branch C" by implementing measures to enhance customer satisfaction and experience.
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ----------------------------------------------------------------- Sales --------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
-- ------------------------------------------------------------------- -----------------------------------------------------------------
USE walmartsalesdata;

Q What Number of sales made each time of the day 
SELECT 
	time_of_day, 
    count(*) AS Number_of_sales_each_day 
FROM
	sales
GROUP BY 1
ORDER BY 
	Number_of_sales_each_day DESC;
    
The busiest time for sales is during the evenings, as the stores experience a high volume of customers during those hours.

Q Which of the customer types brings the most revenue?
SELECT 
	sum(total) as total_revenue, 
    customer_type 
FROM 
	sales
group by 2
order by 1 desc

The "Member" customer type is generating the highest revenue.

Q Which city has the largest tax/VAT percent?
Select 
	city, 
    ROUND(AVG(tax_pct), 2) AS AVG_TAX_PCT 
FROM sales
group by city
order by 2 desc;

The tax percentage in Naypyitaw city is higher compared to other cities

Q Which customer type pays the most in VAT?

SELECT
	customer_type,
	ROUND(AVG(tax_pct),2) AS total_tax
FROM sales
GROUP BY customer_type
ORDER BY total_tax; 











